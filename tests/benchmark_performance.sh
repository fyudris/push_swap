#!/bin/bash

# --- Configuration ---
PUSH_SWAP_EXEC=".././push_swap"     # Path to your push_swap executable
CHECKER_EXEC=".././checker_linux"   # Path to your checker executable

# General Benchmark Limits (for overall pass/fail criteria)
LIMIT_100_OPS_BENCHMARK=700
LIMIT_500_OPS_BENCHMARK=5500

# --- Colors ---
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# --- Prerequisite Checks ---
echo -e "${BLUE}Checking for necessary executables...${NC}"
if [ ! -f "$PUSH_SWAP_EXEC" ] || [ ! -x "$PUSH_SWAP_EXEC" ]; then
    echo -e "${RED}Error: '$PUSH_SWAP_EXEC' not found or not executable. Please check the path.${NC}"
    exit 1
fi
echo -e "${GREEN}Found '$PUSH_SWAP_EXEC'.${NC}"

if [ ! -f "$CHECKER_EXEC" ] || [ ! -x "$CHECKER_EXEC" ]; then
    echo -e "${YELLOW}Warning: '$CHECKER_EXEC' not found or not executable. Correctness checks will be skipped.${NC}"
    SKIP_CHECKER=true
else
    echo -e "${GREEN}Found '$CHECKER_EXEC'.${NC}"
    SKIP_CHECKER=false
fi
echo "--------------------------------------"

# --- Test Cases from Logs ---
# Each element is a string: "Label|NumberCount|ExpectedOps|Input Arguments String"

TEST_CASES_100=(
    "100 Numbers - Log Set 1|100|563|4630 2340 -2958 463 9269 -3809 7437 5141 7179 -4361 -7604 -5645 7232 2754 -9655 8801 2390 124 8459 -431 8186 8962 3232 9874 -3105 4849 7006 3342 -1600 6542 8120 2974 -3803 8697 5630 -5423 -1848 -5704 9616 -3995 1568 -2911 8656 8123 -6376 -2488 -8674 -7327 -302 -5103 -4636 -1578 -6704 6332 9589 -4612 -3882 3808 5779 -5454 -4660 5593 4598 4810 5011 -2303 6627 9943 -7265 -2628 -8447 -4403 7062 3457 -9896 8256 -7697 -8154 3847 -5327 9804 7527 -1948 -3010 -6305 -6933 -929 -4365 -9652 7178 -2131 -2595 6919 -7139 3715 6837 -8508 7031 1191 -2931" \
    "100 Numbers - Log Set 2|100|551|-2109 7567 6353 649 6147 -9939 -3484 7140 -205 1632 3460 -3059 5398 2618 13 -8526 1613 -8642 -1590 -8983 1792 7909 -6908 8039 -3333 -8207 6916 2761 -2131 8888 -3391 3685 8746 -3411 1298 1449 7871 4139 -4754 -1623 8947 -4103 -8443 5450 8611 -7897 2550 -4701 -5268 -8045 9521 4132 2551 9900 -6732 -4245 2801 -3948 -4894 -3891 -760 -9187 -7785 -5380 3213 6177 -336 6297 5181 -3588 -6315 8656 -3904 7291 4 -2555 -1815 8524 -4650 -9811 -284 9236 -1420 -6124 3674 1481 -4434 1593 7602 1169 6632 5211 7324 -9935 -429 -782 4564 -849 9727 8" \
    "100 Numbers - Log Set 3|100|552|-4666 9428 2183 -6180 -9669 7848 -6716 2727 570 1707 -3245 6590 -5918 2606 -5964 -3396 4330 7266 4072 2497 2332 -3260 -2212 878 2661 6791 -7589 6375 8103 -1092 -1771 8452 -3239 921 -1649 -3655 -8814 -4908 8269 -3149 -4005 8662 -4159 -9888 -265 4083 -7787 -5417 -9843 3896 -7218 -6750 -6893 7531 5950 -7197 2901 4398 -8034 -1752 -974 -2307 -687 5357 -3604 5087 6342 -4408 -1774 -5684 5783 432 -9063 -9178 5201 38 6393 5922 -3322 -7331 -1507 -4928 -1994 -8757 3507 -7828 -9406 9257 -3545 7175 -9008 -5659 -3113 -1262 -2033 -7478 -5919 5815 6962 -8733" \
    "100 Numbers - Log Set 4|100|620|3043 2471 8145 5899 -375 -1113 5889 -6045 7080 6395 -3854 -7841 5553 -8191 -4299 4979 3979 -9505 672 -5276 -1058 -3620 6898 -9704 5598 -8599 -5597 4378 6319 -7226 3251 3476 310 -743 -2371 6494 2035 -8427 2660 9455 -1445 -6863 3462 -6511 -154 -1088 -9726 3286 5881 8766 5353 -7120 6374 -3837 -8527 9630 -1854 4744 1154 -2392 -8978 6274 8220 -8966 6881 -2458 -991 864 -8280 2265 9599 1814 -4280 1035 -5068 -7051 2122 -5447 -637 1912 -940 -6742 -4591 3792 -6437 -1747 7807 5486 840 -3531 3250 4718 9989 2338 3340 6020 -6634 8322 -2355 2859" \
    "100 Numbers - Log Set 5|100|598|-7356 6256 3662 7211 6453 -6608 -1283 723 -5161 2664 9015 -7474 -8166 1635 3070 -8459 6861 5135 -9641 -9814 -3238 1747 -8195 -3166 6848 5139 -1053 -6880 -3060 5749 2864 -9408 5522 -3555 1926 -8212 -7832 -1858 -1386 -4446 -3070 6635 1413 289 -1606 -4663 -2650 6 4418 4473 -3418 -1015 -7289 3480 -3028 -8034 736 -7726 6782 504 5733 5344 863 -1555 6507 9155 8499 -2890 5074 -364 -608 -3093 9971 148 -1646 -7656 3737 1625 -6454 722 5201 4739 -9175 5568 -3826 -6219 5189 9106 2878 6784 -6057 -812 7559 -3371 -7959 -5325 -946 2662 492 7571" \
)

TEST_CASES_500=(
    "500 Numbers - Log Set 1|500|5489|8955 -6315 -3011 -1961 5023 -1706 9421 2478 7278 7991 -4691 2098 -1246 -4238 2898 -9821 -3150 -164 -1993 -1535 -4483 8393 -1093 -2141 -1052 3307 2760 6339 -5137 4831 8884 9364 -2457 -8616 7607 8474 -3731 7642 889 -6138 5421 2585 -9384 5318 -5206 -4966 -1985 2745 -5682 -7909 -7067 5551 -8591 -9058 -904 7320 3414 -6993 9644 8477 -7107 -5947 4138 3731 4283 -3584 -1039 -6587 6251 -15 -4792 9707 4305 7496 8782 -957 -1258 7103 -2122 -9549 5109 -6235 -5359 855 5961 3139 7122 -2807 1182 -3985 985 654 -4123 -6176 4543 -234 3807 -3036 -1347 -8253 4641 4875 793 9236 5213 -3795 -7188 1482 -6931 5460 2060 -8757 -258 3966 3071 -2286 4995 -3054 5718 -921 7829 -1970 -1290 -7296 5139 -4074 -1096 -5134 -297 -9663 -7143 -5708 8598 5705 6504 -6049 153 7861 -9219 856 -9772 -4457 6618 1126 7373 9981 -5711 -1979 2730 6520 -9473 -6513 4370 2026 220 7845 3508 8811 1179 9381 7538 -4806 7823 -1583 6421 6133 -5954 -294 -4159 5654 -3070 -774 6075 -5117 4043 6637 -2879 -2636 5885 7356 146 6353 4567 -2127 8496 5838 1214 3721 938 5490 4066 1811 -8860 3065 -8477 5499 -1887 -5692 586 -1532 1768 -6364 4566 -1837 8544 -2103 9369 2933 1119 -4059 8847 -4081 -5673 16 6717 3371 -6649 -5323 -7027 -4725 962 6292 8494 -2018 1364 -394 -7473 5866 6612 -5576 -2261 3349 -3720 -2460 -194 2770 -4281 -7496 -9578 8730 -4498 -1012 -3425 8947 -6979 9275 -3662 -2662 -5644 3949 3232 6123 7091 -1337 2424 -7209 2878 5992 9506 -953 4094 -5432 -3344 -5125 -3165 -8523 82 -2816 9769 3066 -1994 -5662 -831 -3006 -9727 7201 -4012 -566 -331 -4923 3682 -8983 -9263 -2205 -7090 -7024 -8981 7262 6202 -1309 4915 3656 -7747 -4044 -252 -7045 8344 -4523 4835 -5177 -7025 -263 -3639 5652 6411 1647 1117 -5051 2101 -188 1602 6669 -2055 -8543 -2438 3475 8284 4141 -1310 -1366 -6601 8118 3712 -3164 -5737 3701 5704 5284 -5466 3962 -1850 -8581 -2126 -4920 4805 9579 2490 -8408 -2941 5987 -6154 7692 -1964 6344 -4514 6196 -2485 4862 -3714 8695 -7253 -2035 -9783 -1728 3337 3979 -4177 8616 -3505 1252 -626 -2914 -638 -4150 -4418 1130 4738 -4139 -5677 8218 9742 2975 2444 678 8914 -5672 7984 -1075 -2287 6206 -2594 5622 -4228 -2020 5775 6309 6059 1866 8911 157 -3050 6589 -2217 -8582 1785 -2511 -6847 -5310 -5482 -8432 -4164 6967 7715 -3816 -1920 -1247 5554 -3207 -1499 -700 -558 1610 -335 6552 924 -8166 -9995 -91 6808 -9500 -4501 -1420 -9538 368 2246 7321 7507 -5357 -6431 5058 -4130 -4537 -7127 9875 9835 -3583 -7942 -7566 7846 -2892 -8438 -9138 -7615 -3490 -4003 -6834 9329 4750 5068 -2762 -586 -2555 1248 -7732 8856 9239 -6332 -2369 -1330 -1764 -6097 -5325 4417 -1868 3040 -6065 -2912 -69 -984 -5718 -6453 -9292 -5570 1489 -4079 5420 -7435 9873 -8912 -9188 -9713 3906 3393 -8567 8305 -8634 3574 1160 -7191 2729 -2026 672 -2420 -5800 -169 2279 8918 -2625 -1017 8134" \
    "500 Numbers - Log Set 2|500|5360|-6888 3570 -2473 -4745 1548 6608 -7884 7259 -196 4245 8202 -8662 4881 -8030 7785 5048 -5684 4020 1143 5530 -5765 2086 5297 -3450 -145 -6044 9580 -7798 291 -6352 -4380 7464 -6098 9958 3889 1672 1356 2690 -3897 3413 6833 3572 6932 5914 -637 7869 8626 -917 9418 -9576 -4411 3754 9821 -1420 6828 -4849 48 4484 -8386 3774 -903 -5254 -7830 3180 -5558 -1345 759 9159 -3692 -5988 -2529 -1986 -7292 9625 -3554 9330 1714 8705 6805 -9331 -2409 -7339 -5433 4628 1605 320 2565 -5980 -9964 6346 2122 -725 5750 1880 -9683 -4291 -5851 8210 -2448 -2924 732 3586 -6684 7123 -7267 1647 955 4629 5395 -3740 1600 -7728 7207 5145 4540 -1502 4782 -7631 5062 9374 -5658 6699 -5142 -9122 -2831 9242 -7986 4005 -6073 2385 9225 -106 6829 6046 -2377 53 6776 -7557 -2884 -187 3831 1102 8627 5249 -1375 141 -7706 8888 -3881 8736 8765 4945 4479 1317 1484 -7987 -8421 3900 -2989 -8568 -3293 8444 2328 -4370 -6089 2625 9637 433 4685 -4097 -2400 5878 8914 9939 2929 -9374 -1170 4056 -5303 -7921 7950 -3314 8189 -3448 -2365 5254 -6830 -361 2340 2553 -4537 -6624 -2327 -2805 -9140 -2254 -9267 -6090 -754 2567 -9530 -6410 1159 -4316 4589 -7705 -5563 -1284 4302 7292 8877 -9457 -6968 3618 7082 -8007 8285 9725 8663 7216 -8512 6427 -1182 9479 538 -2150 -5410 299 9404 -9667 -3164 586 2217 1094 -2347 3421 8995 8225 -9528 3248 485 -4412 9716 2428 -3537 -163 4737 3232 -6524 -7246 228 1343 -6513 -7300 -3488 8921 6336 -3022 -3058 -3521 -2533 -3112 3659 -7614 -909 8144 -7395 4502 -9339 1953 9840 -4577 -5122 -18 -9366 -8463 -105 -684 -6871 4604 -6182 4988 -2592 7405 -9413 -5002 4834 5861 -9959 -3262 4980 -4376 1225 1110 -3432 5694 3939 -4471 -9224 -4535 -4423 -3292 7186 -2278 -5236 805 5848 -3036 296 4385 -8464 5518 6717 -9371 -8211 769 3062 3625 -1858 2239 -6745 -9508 -2034 -7310 -5020 -763 6445 -8301 1797 -6838 -3732 -4021 7913 -5611 5855 -6922 -5903 -587 -3826 6222 -503 6860 8515 9491 1438 9102 5098 -306 6208 4451 -2764 -832 -8081 582 3468 -1618 -5697 -4496 -1283 -757 -3886 1922 -5780 -7273 -4761 8848 5813 7850 3948 4100 -8116 -7118 -3419 -407 937 -6326 9969 -6757 3117 -9905 3054 3979 -8719 -2483 -2906 -5963 7024 5473 -2835 1494 -2366 -4279 9441 7355 -6154 54 -6062 -3354 -9491 -9647 -5881 8557 -6134 -2116 -7111 1083 -4453 -7694 -6161 9083 -4548 -3193 8784 -2251 699 1673 3264 6728 6590 4669 3038 6564 -6645 6355 -2263 5318 5786 -4966 5621 3656 2750 -3916 -1808 4239 -4587 -9916 7665 4774 -3161 -433 9403 -9586 -6741 4883 -56 8969 2096 7782 9925 1928 -4774 5452 4973 -2375 4501 2903 -2284 -3567 4386 8701 8858 -449 5567 -1819 -8817 -6654 2091 -10 -4083 -5447 7931 1124 5077 -5422 -129 -604 1476 8190 -5240 3720 -7377 1845 -6619 -1895 -3809 -8085 4697 8242 -1624 -9513 -2194 -3714 2865 -1130 -3539 -4693 7427 3306 -9107 4557" \
    "500 Numbers - Log Set 3|500|5359|-1094 -1861 -2739 -8716 -7690 2936 9356 -5458 2889 4174 7707 9544 -7092 2085 -8932 -8663 -4378 5134 7167 4824 1351 3325 -7749 -1456 -9594 -4420 -5295 -4668 1782 -144 9816 452 -342 -1309 4062 -2476 3414 -1049 -6767 7963 -928 8683 483 -8001 -7328 -8094 7264 72 2765 -3781 1068 -2999 -3060 3989 2787 700 -9207 -1455 -3460 2001 -4687 7294 5930 1191 -8749 2971 -887 3117 -5166 5528 2908 -4494 -8079 -5512 -6689 -2712 3983 -3345 -334 1896 -7211 -4301 -4885 3036 2614 5261 -5524 -7798 4117 1096 -769 -3035 -6714 -1268 3236 -5497 9814 3100 1426 9865 1063 -4862 -4590 3479 2158 -834 -8180 -2577 5807 4774 7345 -5197 -6339 8389 -5255 3541 9253 -1052 5170 5665 8629 4589 -6261 -7594 2649 8912 -6402 8351 -8059 -3186 5315 4590 -8041 3499 3046 -2996 4845 -1730 3235 4937 8546 9523 3789 437 4485 -2821 3558 8181 6274 -3432 -9723 -3076 3584 -4069 -9852 -4189 6168 -5956 -8240 8653 -2851 1968 8365 6386 -4679 8733 6330 6317 -27 1853 8374 -7176 9945 1499 9259 -4116 -4903 -6456 -4966 -85 1069 4804 1558 2810 6736 -1459 -6877 8345 6665 -8798 -6787 3780 3606 -5069 6140 5279 5356 5748 -4812 -3292 4944 -7216 -4737 -1727 -171 -9789 8100 -4120 -8604 2913 6287 1029 5888 9861 2160 -3134 -4516 662 -875 1692 -3522 -6989 -7029 -5152 -8268 -9133 -7504 872 6850 -3540 -8822 -2820 -6813 -6929 -3965 4435 -9407 9498 123 -128 -4107 -904 -489 -530 -1682 6726 230 2690 -9934 -8485 -7954 1335 917 2552 -2485 277 -3135 -7147 2410 -8722 533 -8264 -7720 -6090 8224 -3252 3111 3845 -7696 -5818 7395 9254 -5100 2934 -9875 -1775 -8845 -8296 -8837 -9534 3949 -6921 9495 2839 6856 -4558 9496 -1373 -8841 -8710 -9495 -1085 7727 -9783 3340 -688 -6476 -5507 4497 3716 -329 -7686 -2531 9449 9299 8517 -8554 4083 -6097 4263 2187 -7525 -8475 9381 6703 5946 -2682 2430 -8096 -6997 -4402 398 5142 -6252 -87 1778 9092 -5647 -4596 -2265 -5763 -7800 -1829 8673 -8637 -6349 2693 -2808 4914 6468 -2369 -116 -5644 5682 -6370 783 -9180 3643 -6643 -6492 2304 -7893 9427 669 1052 9273 -1075 8658 -8691 -1111 8695 -4444 9357 -9449 -3859 4854 6651 642 3048 8882 7441 5623 2980 -5087 -6634 5596 1322 -194 -1741 7530 8807 -6278 1432 -2895 1605 1886 8982 5997 972 -9199 -8593 2232 -1904 -8386 6766 9349 -6669 -197 4602 4395 -7490 2212 5645 -3314 -3243 -2553 1517 3589 8927 5027 -2315 2405 5723 -335 1751 -3159 -9112 -2860 -5864 6085 6806 -7392 -773 -3235 6581 -3309 -2046 8470 6680 -7471 -145 -8808 451 1153 2944 -3472 9086 -3628 -6093 -7766 -7911 -9256 7040 -4927 5300 -2786 89 6954 528 1713 2488 -1700 7678 -4543 -4138 5283 -435 8751 4142 -4520 -9524 -2279 9166 -8257 -3352 -4797 -5211 -4056 -6418 8964 5094 -2448 1904 8068 1067 -3673 8592 2772 3112 3018 2675 -9744 1211 3338 9783 -447 2065 747 1427 -9190 -8313 -9995 6671 3988 200 4250 -302 -7825 3969 9327" \
    "500 Numbers - Log Set 4|500|5059|-6123 8055 6417 7318 7258 -4750 667 -3931 8084 -2828 -9943 -8150 2467 6318 9124 801 -3973 -98 1731 6927 -5571 -1465 -2691 -5920 7400 7671 -5833 -7353 8308 -911 -2192 5874 3311 9779 -6231 2812 -3149 7975 -7876 5 8323 2003 6964 6036 8070 4634 405 -7055 -8938 -4409 3290 7069 -2328 3349 2525 3366 5894 -1115 -3228 -4394 2708 -7316 5222 -7768 3890 7092 -3302 1218 -6375 8698 8193 7549 -9060 8231 5203 -9311 -5883 -698 -5097 -8972 3047 9985 -5825 -4014 4738 6083 -5708 -1882 -5372 -5370 -710 -6266 -742 -1017 2771 4177 -7521 -4787 5658 -2875 4853 -6301 -142 -736 -2705 1431 -8297 5780 7224 5918 -6222 -7775 7779 4948 -3738 870 -3259 -1484 6756 9618 -6037 1266 -607 6377 1134 8847 -7878 5391 -2952 2145 -2016 1199 -5720 9732 9693 8648 5195 -9707 2379 -1080 83 3992 -1233 2130 3424 -2193 -9046 844 -1396 -9723 -9474 -5783 -2425 6922 -3760 6702 1006 -8666 -1390 -5569 -1999 518 -4587 952 -4553 5812 88 89 -4368 -452 -1822 5672 5317 4432 2233 -9996 -1334 -2804 4929 -4405 5107 -604 -9631 1226 1782 -5519 -284 6035 -1878 -8635 -4671 -2713 -9573 7868 8608 7310 -5583 -4096 9090 -9783 7567 3649 1382 1550 6615 -9575 6258 -7417 7064 -7090 719 4551 6244 -8015 -4642 -8389 6969 -9644 -4747 2947 -2812 2472 -506 7913 -3900 -1342 -1646 -2670 8191 5950 -4024 -1898 6260 -217 -8779 -2583 6824 -9431 -5465 3425 3550 -9994 -3417 -3936 -959 -9821 -7441 -9049 3475 9535 3495 -3077 -5706 -9790 -4538 -2860 4860 -5717 -6124 7212 7817 -8488 -9070 -6562 -5262 9825 3066 1619 502 7464 9554 543 -5013 7026 5723 1986 3231 3442 9806 6895 -7810 -5639 9684 -7501 -6432 7892 -8030 -4651 1060 -8589 -1662 -5044 1708 1882 323 -2565 -844 4973 2752 1495 -9135 6021 -9476 1420 9636 -758 5055 1666 1754 7947 -6296 950 4536 -9988 6933 -7633 -8939 8032 2391 -3271 -4288 5840 -7181 8932 -684 -7162 -6402 998 -8563 -7569 -9415 5166 -596 -5144 4037 -2232 124 -7557 -4384 3674 -3351 4335 3276 -3568 -3278 -5209 5093 -867 -8116 5187 5369 1088 -3756 -8546 3725 -8415 6068 -6819 -263 427 4970 2988 6822 -2683 -4138 9354 5105 -8153 8256 -7249 6007 -6334 -4185 -5829 8710 2323 -7819 -4976 -2089 -5766 -7570 -7323 -6673 -7555 -1259 -9679 673 -8567 -7102 -2259 -1872 4656 -6209 8473 -9071 2688 -13 3318 -4090 183 2301 -9141 6730 -9257 -8944 7940 6800 -1283 -9944 3481 6181 8410 9261 8681 7455 8727 5788 -5142 -6497 -2725 -389 216 3692 -6638 103 6644 288 -2334 1955 7125 6559 -5431 479 -2803 -8763 9646 5071 -9635 -6954 -2404 -9235 9548 -8306 -6951 -6008 -2405 4282 6444 -1510 -5991 -7134 927 -5847 9727 -3002 5444 -3356 6874 7654 -9837 3493 9660 6714 -314 7364 -7122 -3621 4608 4247 -1789 -3385 3217 -2444 -427 9546 -1269 1502 -3218 7515 7512 3280 -2264 -6049 8856 -9328 -8998 3510 -7235 -9261 2407 9046 -4180 3284 3959 8203 -1026 -36 9391 -4600 -8010" \
    "500 Numbers - Log Set 5|500|5198|3214 9441 3891 -2729 2792 -4433 -7560 -9097 -1969 -2943 5111 -6331 1386 -2073 7832 -5864 7282 4854 -2236 -3516 -250 7227 9055 -3089 1969 8118 2369 3008 4075 7332 6553 -7363 -9383 6955 9645 -3318 7652 -6686 -6117 7236 9426 5242 -3587 8549 9960 -2000 74 -831 5931 -1046 6599 8461 3370 1834 -7540 -227 5668 2290 2302 3610 2838 6545 67 2634 5940 -1699 1933 -6830 6024 -7818 -8993 -2385 -5347 -6136 -4888 -7815 -9539 -1262 -2241 1603 -2191 -2275 -4182 -1015 -7731 -347 -4659 -6515 6231 -9327 952 -1053 -7325 -2053 2722 -9267 -5136 2020 4791 5660 5172 7695 -9552 -4411 4637 -192 1539 668 -3216 7256 1762 1020 -3715 -915 -6936 3496 -9148 -175 -4987 8324 -4225 -2011 -3980 442 6891 -6674 1604 8479 -2967 170 3406 130 -5126 2034 -6065 -8725 3037 -9521 -3920 2660 8043 -3935 -9820 -4703 -7812 -5914 2447 7113 3240 -794 -9253 -8273 2531 7020 -8159 8913 7953 4241 -9296 -5151 2873 1828 -7201 5896 4830 8660 -2353 1459 -7340 -300 9471 382 3538 -4567 -2564 4413 -4469 3600 5661 -7947 -6248 5923 -2706 5910 141 427 1641 -5318 -6162 -5854 7499 5800 4352 3522 1972 4578 -3790 -1657 -4119 -7875 9361 -4675 -5399 -4938 3999 -3686 -8634 -2810 3760 6677 3601 -8402 -6267 -1136 2154 -4398 8112 -2880 8583 -6627 5102 7600 -1416 5241 -2253 2521 -9660 -7509 3277 3059 9812 -7197 4401 833 6930 5857 -4422 -7784 -6744 -1961 -8999 -2355 -8381 -3626 8203 -4872 7021 -4611 9970 5153 4282 8270 4701 -189 -4227 8138 -7748 -1310 -9279 -8345 5429 -7694 -2425 4769 -7622 516 5124 8928 -8579 -5876 -5559 3708 -7802 1153 -1175 -9562 3022 6012 4976 6469 9245 -2544 -2524 5304 -651 1375 -3609 -3688 1538 9648 -9904 -6048 -6718 1548 -478 7141 -5079 -8275 -8832 4374 1394 8820 -8289 9159 7211 5942 -3623 -4685 -6838 -2323 -8162 -2129 9111 6915 -4946 2747 4386 9559 8450 -2905 -279 -5821 7306 3178 -4008 -5872 -3075 -3371 -6832 1118 4243 4418 -380 -7889 -3660 -5705 7937 1788 -5509 2628 -2242 -8644 -7480 -4842 -1907 -490 3604 -5062 -9310 -270 1166 7087 -5109 709 6653 -3525 8268 6098 9283 9272 -2993 933 -3439 -5092 8429 -3451 4094 6736 -9397 1082 2430 891 -7357 -6754 5543 -4281 5869 4844 -1276 8761 -8548 8395 -9940 -7073 -7106 9593 9910 462 5037 -1401 -5576 -1925 -4004 4754 -7679 5324 -8886 -251 9038 6010 -1198 -9929 -9892 -5145 5209 2598 3584 3101 9094 8584 8582 -8296 6162 -3243 -8382 5522 894 -4593 -9122 -320 -2566 7890 -7845 -6556 4845 -3223 -7524 -9478 -7523 -9899 -9763 -3895 3759 -4048 -2532 -2716 -7621 -5447 7698 -3808 4 -6376 4904 -6349 -6471 -2220 8375 11 -5397 -7125 9740 -6217 -9451 -1799 -1595 2200 1522 8779 -5662 4230 4189 -3750 5712 4038 -1991 -6497 -3510 7339 -416 -8580 7540 2812 -5303 -8477 4708 -9192 6536 -9938 8999 -9686 7482 -4483 3892 9899 2425 -7229 -1081 -7147 -9588 -1850 -5696 -9105 2306 -6389 -2988 4443 7364 -9704 4208 -9573" \
)

# --- Helper Function to Run a Single Specific Test ---
run_specific_test() {
    local label="$1"
    local number_count="$2"
    local expected_ops="$3"
    local input_args="$4"
    local benchmark_limit="$5" # General benchmark limit for this size

    echo -e "\n${CYAN}--- Testing: ${label} ---${NC}"
    echo -e "  Input Args: ${input_args:0:50}..." # Print first 50 chars of input
    echo -e "  Logged Ops from original successful run: ${expected_ops}"
    echo -e "  Overall Benchmark Target for ${number_count} numbers: < ${benchmark_limit} ops"

    local operations_output
    local push_swap_exit_code
    operations_output=$($PUSH_SWAP_EXEC $input_args 2>&1)
    push_swap_exit_code=$?

    if [ $push_swap_exit_code -ne 0 ] || echo "$operations_output" | grep -q "Error"; then
         echo -e "  Status: ${RED}FAIL (Push_swap exited with error or printed 'Error')${NC}"
         echo -e "    Output: $operations_output"
         return 1
    fi

    local num_ops=$(echo "$operations_output" | wc -l | awk '{print $1}')
    local checker_output_text="SKIPPED"
    local checker_verdict="OK"

    if [ "$SKIP_CHECKER" = false ]; then
        checker_output_text=$(echo "$operations_output" | $CHECKER_EXEC $input_args 2>&1)
        if [[ "$checker_output_text" == "OK" ]]; then
            checker_verdict="OK"
        else
            checker_verdict="KO"
        fi
    fi

    echo -e "  Checker Result: ${checker_output_text}"
    echo -e "  Operations Count this run: ${num_ops}"

    local overall_pass=true
    if [[ "$checker_verdict" != "OK" ]]; then
        echo -e "  Status: ${RED}FAIL (Checker reported: ${checker_output_text})${NC}"
        overall_pass=false
    fi

    if [ "$num_ops" -ge "$benchmark_limit" ]; then
        echo -e "  Status: ${RED}FAIL (Exceeded benchmark limit of ${benchmark_limit} with ${num_ops} ops)${NC}"
        overall_pass=false
    elif [ "$overall_pass" = true ]; then # Only if checker also passed
         echo -e "  Status: ${GREEN}PASS (Checker OK, Ops ${num_ops} < ${benchmark_limit})${NC}"
    fi

    # Additional check against original logged operations for consistency
    if [ "$num_ops" -eq "$expected_ops" ]; then
        echo -e "  Consistency: ${GREEN}MATCHED original logged operations (${expected_ops} ops).${NC}"
    elif [ "$num_ops" -lt "$expected_ops" ]; then
        echo -e "  Consistency: ${GREEN}IMPROVED on original logged operations (New: ${num_ops} vs Old: ${expected_ops}).${NC}"
    else # num_ops > expected_ops
        echo -e "  Consistency: ${YELLOW}REGRESSED from original logged operations (New: ${num_ops} vs Old: ${expected_ops}).${NC}"
    fi


    if [ "$overall_pass" = false ]; then return 1; fi
    return 0
}

# --- Main Script ---
echo -e "\n${BLUE} Initiating Push_swap Re-test with Logged Successful Inputs ${NC}"
echo "================================================================"

total_tests=0
total_passed_tests=0

echo -e "\n${BLUE}--- Testing with 100 Number Inputs from Logs ---${NC}"
for test_case_str in "${TEST_CASES_100[@]}"; do
    IFS='|' read -r label count expected_ops args <<< "$test_case_str"
    total_tests=$((total_tests + 1))
    run_specific_test "$label" "$count" "$expected_ops" "$args" "$LIMIT_100_OPS_BENCHMARK"
    if [ $? -eq 0 ]; then
        total_passed_tests=$((total_passed_tests + 1))
    fi
    echo "----------------------------------------------------------------"
done

echo -e "\n${BLUE}--- Testing with 500 Number Inputs from Logs ---${NC}"
for test_case_str in "${TEST_CASES_500[@]}"; do
    IFS='|' read -r label count expected_ops args <<< "$test_case_str"
    total_tests=$((total_tests + 1))
    run_specific_test "$label" "$count" "$expected_ops" "$args" "$LIMIT_500_OPS_BENCHMARK"
    if [ $? -eq 0 ]; then
        total_passed_tests=$((total_passed_tests + 1))
    fi
    echo "----------------------------------------------------------------"
done

echo -e "\n${BLUE} Re-test Suite Finished. ${NC}"
echo "================================================================"
echo -e "Overall Summary for Logged Inputs Re-test:"
if [ "$total_tests" -eq "$total_passed_tests" ]; then
    echo -e "  ${GREEN}All ${total_passed_tests}/${total_tests} logged test cases re-passed successfully!${NC}"
else
    local total_failed=$((total_tests - total_passed_tests))
    echo -e "  ${RED}${total_failed}/${total_tests} logged test cases failed on re-run.${NC}"
fi
echo "================================================================"

exit 0
